Implement cursor-based processing. A T-SQL cursor allows you to write row-by-row processing into your
application, giving you full control over exactly what is one

avoiding cursors whenever possible, using cursors for ad hoc

The following code block demonstrates a cursor that loops through each session ID currently active on the
SQL Server instance. The block executes SP_WHO on each session to see each session's logged-in user name and
other data.

-- Do not show rowcounts in the results
SET NOCOUNT ON;
DECLARE @session_id smallint;
-- Declare the cursor
DECLARE session_cursor CURSOR FORWARD_ONLY READ_ONLY FOR
SELECT session_id
FROM sys.dm_exec_requests
WHERE status IN ('runnable', 'sleeping', 'running');
-- Open the cursor
OPEN session_cursor;
-- Retrieve one row at a time from the cursor
FETCH NEXT
FROM session_cursor
INTO @session_id;
-- Process and retrieve new rows until no more are available
WHILE @@FETCH_STATUS = 0
BEGIN
PRINT 'Spid #: ' + STR(@session_id);
EXEC ('sp_who ' + @session_id);
FETCH NEXT
FROM session_cursor
INTO @session_id;
END;
-- Close the cursor
CLOSE session_cursor;
-- Deallocate the cursor
DEALLOCATE session_cursor

